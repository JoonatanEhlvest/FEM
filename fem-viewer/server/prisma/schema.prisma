// docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  DEVELOPER
  VIEWER
}

model User {
  id String @id @default(uuid())

  username String @unique
  password String @unique

  role UserRole

  modelGroups ModelGroupsOnUsers[]

  sharedBy Share[] @relation("sharedBy")

  sharedTo Share[] @relation("sharedTo")


  accounts    User[]  @relation("createdBy")
  createdBy   User?   @relation("createdBy", fields: [createdById], references: [id], onDelete: Cascade)
  createdById String?
}

model File {
  id String @id @default(uuid())

  modelGroup   ModelGroup @relation(fields: [modelGroupId], references: [id], onDelete: Cascade)
  modelGroupId String

  name String
}

model ModelGroup {
  id String @id @default(uuid())

  name String @unique


  files  File[]
  users  ModelGroupsOnUsers[]
  shares Share[]
}

model ModelGroupsOnUsers {
  modelGroup   ModelGroup @relation(fields: [modelGroupId], references: [id], onDelete: Cascade)
  modelGroupId String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  owner Boolean

  @@id([modelGroupId, userId])
}

model Share {

  modelGroup   ModelGroup @relation(fields: [modelGroupId], references: [id], onDelete: Cascade)
  modelGroupId String

  sharedBy     User   @relation("sharedBy", fields: [sharedByName], references: [username], onDelete: Cascade)
  sharedByName String

  sharedTo     User   @relation("sharedTo", fields: [sharedToName], references: [username], onDelete: Cascade)
  sharedToName String

  @@id([sharedToName, modelGroupId, sharedByName])
}
